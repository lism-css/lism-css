// コンテナ定義 + 併用クラスで内部のコンテンツ幅を制御する。
.is--container {
	container-type: inline-size;
	margin-inline: auto;
	inline-size: 100%; // gridやflex内での挙動を考慮。（container-type:inline-sizeだと横幅つぶれる）
	// 	--wideSize: 100%;

	// .is--overwide のサイズを is--container ごとにセット。
	--overwideSize: 100cqi;
	:where(.has--gutter) > & {
		--overwideSize: calc(100cqi + var(--gutter) * 2);
	}

	// 子要素の制御
	> * {
		--maxIsz: var(--contentSize, 100%);
		max-inline-size: min(100%, var(--maxIsz, 100%));
		margin-inline: auto;
	}
}

// Memo: それぞれの直下要素( > * ) に対してスタイルをセットした方が、ネスト時の影響をなくせるが、constrainedのネストが多様されることは少ないので親側の変数管理のみで実装。
.-container\:s {
	--contentSize: var(--size-s);
	--wideSize: var(--size-m);
}
.-container\:m {
	--contentSize: var(--size-m);
	--wideSize: var(--size-l);
}
.-container\:l {
	--contentSize: var(--size-l);
	--wideSize: var(--size-xl);
}
